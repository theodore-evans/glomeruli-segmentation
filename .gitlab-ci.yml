image: python:3.8

stages:
  - codecheck
  - test

before_script:
  - python -m pip install --upgrade pip
  - pip install poetry
  - poetry config virtualenvs.create false
  - poetry install

codecheck:
  stage: codecheck
  script:
    - poetry run black --check glomeruli_segmentation
    - poetry run isort --check glomeruli_segmentation
    - poetry run pylint glomeruli_segmentation
    - poetry run black --check tests
    - poetry run isort --check tests
    - poetry run pylint tests

unit_tests:
  stage: test
  script:
    - apt update && apt install -y libgl1-mesa-dev
    - curl -OJ https://nx9836.your-storageshare.de/s/7FGbJRn97NYB5pD/download && mv glomeruli_segmentation_16934_best_metric.model-384e1332.pth ./tests
    - poetry run python3 -m pytest


# test_app:
#   stage: test
#   script:
#     - curl -OJ https://nx9836.your-storageshare.de/s/Pws2am5cd6wGdZw/download && mv new_converted_kidney_bigtiles.tif /data
#     - git clone --recurse-submodule https://gitlab.com/empaia/integration/empaia-app-test-suite
#     - cd empaia-app-test-suite
#     - poetry install
#     - poetry build -f wheel
#     - echo "{\"/data/\":\"/data\"}" > ./wsi-mount-points.json
#     - cat ./wsi-mount-points.json
#     - python3 -m venv eats
#     - source eats/bin/activate
#     - pip3 install wheel
#     - pip3 install ./dist/*.whl
#     - eats services up ./wsi-mount-points.json
#     - eats services wait
#     - cd ..
#     - eats apps register ./glomeruli-segmentation.json glomeruli-segmentation > app.env
#     - export $(xargs <app.env)
#     - eats jobs register ./inputs $APP_ID > job.env
#     - export $(xargs <job.env)
#     - export EMPAIA_APP_API=http://localhost:8082
#     - eats jobs set-running $EMPAIA_JOB_ID
#     - python3 glomeruli_segmentation/main.py -v